
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASIGNA CARACTERES CHARACTER COMA DEFINE DIFERENCIA DIVIDE EN ENDSENTENCE ENTERO ID IGUALDAD IMPORTA LBRACKET LCORCHE LPARENT MAYOIGUA MAYORQUE MENOIGUAL MENORQUE MODULO MUTIPLICA NUMERO PARA RBRACKET RCORCHE RESTA RETORNA RPARENT SI SINO SUMA VARconstDecl :expression : expression SUMA termexpression : expression RESTA termexpression : termterm : term MUTIPLICA factorterm : term DIVIDE factorterm : factorfactor : NUMEROfactor : LPARENT expression RPARENT'
    
_lr_action_items = {'$end':([0,1,],[-1,0,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constDecl':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> constDecl","S'",1,None,None,None),
  ('constDecl -> <empty>','constDecl',0,'p_constDeclEmpy','AnalizadorSin.py',29),
  ('expression -> expression SUMA term','expression',3,'p_expression_plus','AnalizadorSin.py',33),
  ('expression -> expression RESTA term','expression',3,'p_expression_minus','AnalizadorSin.py',37),
  ('expression -> term','expression',1,'p_expression_term','AnalizadorSin.py',41),
  ('term -> term MUTIPLICA factor','term',3,'p_term_times','AnalizadorSin.py',45),
  ('term -> term DIVIDE factor','term',3,'p_term_div','AnalizadorSin.py',49),
  ('term -> factor','term',1,'p_term_factor','AnalizadorSin.py',53),
  ('factor -> NUMERO','factor',1,'p_factor_num','AnalizadorSin.py',57),
  ('factor -> LPARENT expression RPARENT','factor',3,'p_factor_expr','AnalizadorSin.py',61),
]
